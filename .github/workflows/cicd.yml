name: CICD Pipeline 

on:
  push:
    branches: [ "main" ]

env:
  WORKSPACE: /home/ubuntu/actions-runner/_work/SpringBoot-GitHubActions/SpringBoot-GitHubActions

jobs:
  compile:
    runs-on: runner1
    steps:
      - name: Checkout Code (Only Once)
        uses: actions/checkout@v4
        with:
          path: ${{ env.WORKSPACE }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: |
          cd ${{ env.WORKSPACE }}
          mvn compile

  security-check:
    runs-on: runner1
    needs: compile
    steps:
      - name: Reuse Checked-Out Code
        run: ls -l ${{ env.WORKSPACE }}

      - name: Install Trivy
        run: |
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update -y
          sudo apt-get install -y trivy

      - name: Trivy FS Scan
        run: |
          cd ${{ env.WORKSPACE }}
          sudo trivy fs --format table -o fs-report.json .

      - name: Install Gitleaks
        run: sudo apt install gitleaks -y

      - name: Gitleaks Code Scan
        run: |
          cd ${{ env.WORKSPACE }}
          gitleaks detect --source . -r gitleaks-report.json -f json

  test:
    runs-on: runner1
    needs: security-check
    steps:
      - name: Reuse Checked-Out Code
        run: ls -l ${{ env.WORKSPACE }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Unit Test Cases
        run: |
          cd ${{ env.WORKSPACE }}
          mvn test

  build_project_and_sonar_scan:
    runs-on: runner1
    needs: test
    steps:
      - name: Reuse Checked-Out Code
        run: ls -l ${{ env.WORKSPACE }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build Project
        run: |
          cd ${{ env.WORKSPACE }}
          mvn package

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          pollingTimeoutSec: 600
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
